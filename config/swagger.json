{
  "openapi": "3.0.0",
  "info": {
    "title": "BookReviewAPI",
    "version": "1.0.0",
    "description": "API for managing a book review platform. Get JWT token via GitHub OAuth (/auth/github) or user login."
  },
  "servers": [
    {
      "url": "https://cse-341-project1-qz6j.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Home",
        "description": "Welcome page with API information and authentication instructions",
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "endpoints": { "type": "object" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "summary": "Login with GitHub",
        "description": "Initiates GitHub OAuth flow. Redirects to GitHub for authentication, then back to callback URL with JWT token.",
        "responses": {
          "302": {
            "description": "Redirects to GitHub OAuth"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "summary": "GitHub OAuth Callback",
        "description": "GitHub redirects here after authentication. Returns JWT token in URL query parameter.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Authorization code from GitHub"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects to home page with JWT token in URL"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error during authentication"
          }
        }
      }
    },
    "/login-success": {
      "get": {
        "summary": "Login Success",
        "description": "Shows successful login message",
        "responses": {
          "200": {
            "description": "Login successful"
          }
        }
      }
    },
    "/login-error": {
      "get": {
        "summary": "Login Error",
        "description": "Shows authentication error message",
        "responses": {
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account with username, email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": { 
                    "type": "string",
                    "example": "john_doe",
                    "description": "Unique username"
                  },
                  "email": { 
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com",
                    "description": "Unique email address"
                  },
                  "password": { 
                    "type": "string",
                    "format": "password",
                    "example": "securepassword123",
                    "description": "Password (min 6 characters)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { 
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authenticated requests"
                    }
                  }
                }
              }
            }
          },
          "400": { 
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - username or email already exists"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticate user with username and password, returns JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": { 
                    "type": "string",
                    "example": "john_doe"
                  },
                  "password": { 
                    "type": "string",
                    "format": "password",
                    "example": "securepassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { 
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authenticated requests"
                    }
                  }
                }
              }
            }
          },
          "401": { 
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve user details (requires authentication)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": { 
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "summary": "Update user profile",
        "description": "Update user information (requires authentication - can only update own profile)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { 
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete user account (requires authentication - can only delete own account)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/books": {
      "post": {
        "summary": "Create a book",
        "description": "Add a new book to the catalog (requires authentication)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "author"],
                "properties": {
                  "title": { 
                    "type": "string",
                    "example": "The Great Gatsby"
                  },
                  "author": { 
                    "type": "string",
                    "example": "F. Scott Fitzgerald"
                  },
                  "genre": { 
                    "type": "string",
                    "example": "Fiction"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { 
            "description": "Book created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": { "description": "Bad request" }
        }
      },
      "get": {
        "summary": "List all books",
        "description": "Retrieve all books with optional genre filtering",
        "parameters": [
          { 
            "name": "genre", 
            "in": "query", 
            "schema": { "type": "string" },
            "description": "Filter by genre"
          }
        ],
        "responses": {
          "200": { 
            "description": "List of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get book by ID",
        "description": "Retrieve detailed information about a specific book",
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "responses": {
          "200": { 
            "description": "Book details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": { "description": "Book not found" }
        }
      },
      "put": {
        "summary": "Update book",
        "description": "Update book information (requires authentication)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "author": { "type": "string" },
                  "genre": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { 
            "description": "Book updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": { "description": "Book not found" }
        }
      },
      "delete": {
        "summary": "Delete book",
        "description": "Remove a book from the catalog (requires authentication)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "responses": {
          "200": { "description": "Book deleted" },
          "404": { "description": "Book not found" }
        }
      }
    },
    "/reviews": {
      "post": {
        "summary": "Create a review",
        "description": "Add a review for a book (requires authentication)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["bookId", "rating"],
                "properties": {
                  "bookId": { 
                    "type": "string",
                    "description": "ID of the book being reviewed"
                  },
                  "rating": { 
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5,
                    "example": 4,
                    "description": "Rating from 1 to 5 stars"
                  },
                  "comment": { 
                    "type": "string",
                    "example": "Great book with compelling characters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { 
            "description": "Review created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": { "description": "Bad request" }
        }
      },
      "get": {
        "summary": "List all reviews",
        "description": "Retrieve all reviews with optional book filtering",
        "parameters": [
          { 
            "name": "bookId", 
            "in": "query", 
            "schema": { "type": "string" },
            "description": "Filter reviews by book ID"
          }
        ],
        "responses": {
          "200": { 
            "description": "List of reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "summary": "Get review by ID",
        "description": "Retrieve detailed information about a specific review",
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "responses": {
          "200": { 
            "description": "Review details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "404": { "description": "Review not found" }
        }
      },
      "put": {
        "summary": "Update review",
        "description": "Update review information (requires authentication - can only update own reviews)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": { 
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5
                  },
                  "comment": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { 
            "description": "Review updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "404": { "description": "Review not found" }
        }
      },
      "delete": {
        "summary": "Delete review",
        "description": "Remove a review (requires authentication - can only delete own reviews)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string" } 
          }
        ],
        "responses": {
          "200": { "description": "Review deleted" },
          "404": { "description": "Review not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /users/login or /auth/github"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "githubId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "title": { "type": "string" },
          "author": { "type": "string" },
          "genre": { "type": "string" },
          "averageRating": { "type": "number" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "bookId": { "type": "string" },
          "userId": { "type": "string" },
          "rating": { "type": "number" },
          "comment": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}